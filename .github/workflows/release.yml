name: Release Process

on:
  push:
    branches:
      - main
    tags:
      - 'v*.*.*'

jobs:
  semantic_release:
    if: startsWith(github.ref, 'refs/heads/')
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Get Node Version
        id: get_node_version
        run: |
          NODE_VERSION=$(grep 'node =' mise.toml | sed -E 's/node = "([^"]+)"/\1/')
          echo "version=$NODE_VERSION" >> $GITHUB_OUTPUT

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "${{ steps.get_node_version.outputs.version }}"

      - name: Install Dependencies
        run: npm ci

      - name: Run Semantic Release
        env:
          # Use PAT instead of GITHUB_TOKEN
          GITHUB_TOKEN: ${{ secrets.PAT_TOKEN }}
        run: |
          npx semantic-release

  docker_release:
    if: startsWith(github.ref, 'refs/tags/v')
    runs-on: ubuntu-latest
    permissions:
      packages: write
      contents: read
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Get Node Version
        id: get_node_version
        run: |
          NODE_VERSION=$(grep 'node =' mise.toml | sed -E 's/node = "([^"]+)"/\1/')
          echo "version=$NODE_VERSION" >> $GITHUB_OUTPUT

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and Push Docker Image
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          build-args: |
            NODE_VERSION=${{ steps.get_node_version.outputs.version }}
          tags: ghcr.io/${{ github.repository_owner }}/${{ github.repository }}:${{ github.ref_name }}
